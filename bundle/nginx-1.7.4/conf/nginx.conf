
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       80;
        server_name  localhost;

        location / {
            root   html;
            index  index.html index.htm;
        }


        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }


    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}

rtmp_auto_push on;
rtmp_auto_push_reconnect 1s;
rtmp_socket_dir /var/tmp;

error_log /home/logs/nginx-rtmp/1936.error.log;

rtmp {
	log_format access_log_rtmp
	'$remote_addr,[$time_local],$command,$app,$name,"$args",'
	'$bytes_received,$bytes_sent,"$flashver",$session_time,$session_readable_time,'
	'"$pageurl","$tcurl","$swfurl",$connection';

	access_log /home/logs/nginx-rtmp/1936.access.log access_log_rtmp;

	server {
		listen 1936;

		# RTMP acknowledge window size.
		ack_window 4000000;

		# Makes video stream start with a key frame.
		wait_key on;

		# Disable audio until first video frame is sent. 
		wait_video on;

		# Respawns child process when it's terminated while publishing is still on
		respawn on;
		
		# Respawn timeout to wait before starting new child instance.
		respawn_timeout 0;

		application publish {
			live on;

			# Send NetStream.Play.PublishNotify and NetStream.Play.UnpublishNotify to subscribers.
			publish_notify on;

			# Send NetStream.Play.Start and NetStream.Play.Stop to each subscriber only at the start and end of playback.
			play_restart on;

			# Relay is destroyed when connection is closed.
			session_relay off;

			# Timeout to wait before reconnecting pushed connection after disconnect.
			push_reconnect 1s;

			# Drop publisher connection which has been idle (no audio/video data) within specified time.
			drop_idle_publisher 10s;
		}
	}
}

